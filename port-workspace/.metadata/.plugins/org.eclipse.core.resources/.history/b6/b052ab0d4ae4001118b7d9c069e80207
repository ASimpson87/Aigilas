package com.aigilas.states;import com.spx.wrapper.*;import java.util.*;import ï»¿com.spx.states.*;import com.spx.entities.*;import com.aigilas.creatures.*;import com.aigilas.dungeons.*;import com.spx.text.*;import com.spx.util.*;import com.spx.core.*;import com.aigilas.management.*;import com.spx.io.*;
    public class OptionsState  extends  State
    {
        private ActionTextHandler _text = new ActionTextHandler();

        private static final String PlayText = "Play Game";
        private static final String OptionsText = "Options";
        private static final String QuitText = "Quit Game";
        private static final String SelectionText = "--<";

        private int _selection;

        public OptionsState()
        {
            Input.SetContext(Contexts.Nonfree, Client.Get().GetFirstPlayerIndex());
        }
        public void Update()
        {
            _text.WriteAction(PlayText, 1, 300, 100);
            _text.WriteAction(OptionsText, 1, 300, 200);
            _text.WriteAction(QuitText, 1, 300, 300);


            _selection += (Input.IsActive(Commands.MoveDown, 0) ? 1  extends  0)
                + (Input.IsActive(Commands.MoveUp, 0) ? -1  extends  0);
            _selection %= 3;

            if (Input.IsActive(Commands.Confirm, Client.Get().GetFirstPlayerIndex()))
            {
                switch (_selection)
                {
                    case 0 extends 
                        Input.SetContext(Contexts.Free, Client.Get().GetFirstPlayerIndex());
                        StateManager.LoadState(new GameplayState());
                        return;
                    case 1 extends 
                        StateManager.LoadState(new OptionsState());
                        return;
                    case 2 extends 
                        Environment.Exit(0);
                        return;
                    default extends  break;
                }
            }

            _text.WriteAction(SelectionText,1,225,100*(_selection+1));
        }
        public void LoadContent()
        {

        }
        public void Draw()
        {
            _text.Draw();
            _text.Clear();
        }
    }
