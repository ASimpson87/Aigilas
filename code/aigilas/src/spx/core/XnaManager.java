package spx.core;import xna.wrapper.ContentManager;import xna.wrapper.GraphicsDeviceManager;import xna.wrapper.Renderer;import xna.wrapper.SpriteFont;import com.badlogic.gdx.graphics.Texture;import com.badlogic.gdx.graphics.g2d.Sprite;public class XnaManager {	public static int WindowHeight = GameManager.SpriteHeight * GameManager.TileMapHeight; // 720																							// //1050	public static int WindowWidth = GameManager.SpriteWidth * GameManager.TileMapWidth; // 1280																						// //1680	public static int RenderHeight = WindowHeight;	public static int RenderWidth = WindowWidth;	private static ContentManager __assetHandler;	private static GraphicsDeviceManager __graphics;	public static Renderer Renderer;	private static final String __menuBaseSprite = "MenuBase.png";	private static final String __gameOverSprite = "GameOver.png";	private static final String __fontName = "Action";	private static final String __particleSprite = "Particle.png";	public static void SetContentManager(ContentManager assetHandler) {		__assetHandler = assetHandler;	}	private static Texture GetAsset(String resourceName) {		return __assetHandler.LoadTexture(resourceName);	}	public static Sprite GetParticleAsset() {		return new Sprite(GetAsset(__particleSprite));	}	public static Sprite GetMenuBaseAsset() {		return new Sprite(GetAsset(__menuBaseSprite));	}	public static Sprite GetSpriteAsset(int index) {		return __assetHandler.LoadSprite(index);	}	public static Texture GetGameOverAsset() {		return GetAsset(__gameOverSprite);	}	private static SpriteFont GetFont(String resourceName) {		return __assetHandler.LoadSpriteFont(resourceName);	}	public static SpriteFont GetActionFont() {		return GetFont(__fontName);	}	public static void SetupCamera(boolean isFullScreen) {		Renderer = new Renderer();	}	public static Point2 GetCenter() {		return new Point2(WindowWidth / 2, WindowHeight / 2);	}	public static Point2 GetDimensions() {		return new Point2(WindowWidth, WindowHeight);	}}