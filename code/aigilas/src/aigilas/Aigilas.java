package aigilas; import com.badlogic.gdx.graphics.Color;import spx.core.XnaManager;import spx.devtools.DevConsole;import spx.io.Client;import spx.io.Input;import spx.particles.ParticleEngine;import spx.sprites.SpriteSheetManager;import spx.states.StateManager;import spx.text.TextManager;import xna.wrapper.ContentManager;import xna.wrapper.GraphicsDevice;import xna.wrapper.GraphicsDeviceManager;import xna.wrapper.MediaPlayer;import xna.wrapper.PlayerIndex;import aigilas.management.Commands;import aigilas.management.InputInitializer;import aigilas.management.SpriteInitializer;import aigilas.states.MainMenuState;import com.badlogic.gdx.ApplicationListener;import com.badlogic.gdx.graphics.Color;public class Aigilas implements ApplicationListener {	private final GraphicsDeviceManager graphics;	private final ContentManager Content;	private final GraphicsDevice GraphicsDevice;	private boolean IsRunning = true;	public Aigilas() {		// Client.Get();		graphics = new GraphicsDeviceManager();		XnaManager.SetupCamera(graphics, false);		Content = new ContentManager();		GraphicsDevice = new GraphicsDevice();		Content.RootDirectory = "Content";	}	private void SetIsRunning(boolean isRunning) {		IsRunning = isRunning;	}	@Override	public void create() {		XnaManager.SetContentManager(new ContentManager());		Input.Setup(new InputInitializer());		SpriteSheetManager.Setup(new SpriteInitializer());		StateManager.LoadState(new MainMenuState());		ParticleEngine.Reset();		StateManager.LoadContent();		TextManager.LoadContent();		// $$$MediaPlayer.Play(Content.Load<Song>("MainTheme"));		MediaPlayer.IsRepeating = true;	}	@Override	public void resize(int width, int height) {		// TODO Auto-generated method stub	}	@Override	public void render() {		// Update		Input.Update();		if (Input.DetectState(Commands.ToggleDevConsole, Client.Get().GetFirstPlayerIndex())) {			DevConsole.Get().Toggle();		}		if (Client.Get().NextTurn()) {			for (int ii = 0; ii < 4; ii++) {				PlayerIndex player = PlayerIndex.values()[ii];				/*				 * $$$ if (GamePad.GetState(player).IsPressed(Buttons.Back) &&				 * GamePad.GetState(player).IsPressed(Buttons.Start)) {				 * SetIsRunning(false); }				 */			}			ParticleEngine.Update();			StateManager.Update();			TextManager.Update();			// $$$Client.Get().PrepareForNextTurn();		}		else {			Client.Get().HeartBeat();		}		if (!IsRunning) {			System.exit(0);		}		// Render		GraphicsDevice.clear(Color.WHITE);		StateManager.Draw();		ParticleEngine.Draw();		TextManager.Draw();		DevConsole.Get().Draw();	}	@Override	public void pause() {		// TODO Auto-generated method stub	}	@Override	public void resume() {		// TODO Auto-generated method stub	}	@Override	public void dispose() {		// TODO Auto-generated method stub	}}