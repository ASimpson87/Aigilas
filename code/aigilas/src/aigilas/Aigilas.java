package aigilas;import aigilas.management.Commands;import aigilas.management.InputInitializer;import aigilas.management.SpriteInitializer;import aigilas.states.MainMenuState;import spx.core.XnaManager;import spx.devtools.DevConsole;import spx.io.Client;import spx.io.Input;import spx.particles.ParticleEngine;import spx.sprites.SpriteSheetManager;import spx.states.StateManager;import spx.text.TextManager;import xna.wrapper.BlendState;import xna.wrapper.Buttons;import xna.wrapper.Color;import xna.wrapper.GamePad;import xna.wrapper.GameTime;import xna.wrapper.GraphicsDeviceManager;import xna.wrapper.MediaPlayer;import xna.wrapper.PlayerIndex;import xna.wrapper.Resolution;import xna.wrapper.SpriteBatch;import xna.wrapper.SpriteSortMode;import xna.wrapper.TimeSpan;public class Aigilas extends xna.wrapper.Game {	private GraphicsDeviceManager graphics;	public Aigilas() {		this.TargetElapsedTime = TimeSpan.FromSeconds(1.0f / 60.0f);		Client.Get();		graphics = new GraphicsDeviceManager(this);		XnaManager.SetupCamera(graphics, false);		Content.RootDirectory = "Content";	}	@Override	public void Initialize() {		XnaManager.SetContentManager(this.Content);		Input.Setup(new InputInitializer());		SpriteSheetManager.Setup(new SpriteInitializer());		StateManager.LoadState(new MainMenuState());		ParticleEngine.Reset();		super.Initialize();	}	@Override	protected void LoadContent() {		XnaManager.Renderer = new SpriteBatch(GraphicsDevice);		StateManager.LoadContent();		TextManager.LoadContent();		// $$$MediaPlayer.Play(Content.Load<Song>("MainTheme"));		MediaPlayer.IsRepeating = true;	}	@Override	protected void UnloadContent() {	}	@Override	protected void Update(GameTime gameTime) {		Input.Update();		if (Input.DetectState(Commands.ToggleDevConsole, Client.Get()				.GetFirstPlayerIndex())) {			DevConsole.Get().Toggle();		}		if (Client.Get().NextTurn()) {			for (int ii = 0; ii < 4; ii++) {				PlayerIndex player = PlayerIndex.values()[ii];				if (GamePad.GetState(player).IsPressed(Buttons.Back)						&& GamePad.GetState(player).IsPressed(Buttons.Start)) {					SetIsRunning(false);				}			}			ParticleEngine.Update();			StateManager.Update();			TextManager.Update();			super.Update(gameTime);			Client.Get().PrepareForNextTurn();		} else {			Client.Get().HeartBeat();		}	}	@Override	protected void Draw(GameTime gameTime) {		GraphicsDevice.clear(Color.White);		Resolution.BeginDraw();		XnaManager.Renderer.Begin(SpriteSortMode.FrontToBack,				BlendState.AlphaBlend, null, null, null, null,				XnaManager.GetScalingMatrix());		StateManager.Draw();		ParticleEngine.Draw();		TextManager.Draw();		DevConsole.Get().Draw();		super.Draw(gameTime);		XnaManager.Renderer.End();	}}