package com.aigilas.strategies;import com.xna.wrapper.*;import java.util.*;import com.aigilas.creatures.*;    public class StrategyFactory    {        public static IStrategy Create(int strategy,ICreature target,int... AigilasActorTypes)        {            switch (strategy)            {                case Strategy.Attack: return new AttackStrategy(target,AigilasActorType.PLAYER);                case Strategy.AttackSelf: return new AttackSelfStrategy(target);                case Strategy.Confused: return new ConfusedStrategy(target);                case Strategy.ConfusedAndDying: return new ConfusedAndDyingStrategy(target);                case Strategy.ControlledByPlayer: return new ControlledByPlayer(target);                               case Strategy.Flee: return new FleeStrategy(target,AigilasActorType.PLAYER);                case Strategy.MinionCloud: return new MinionCloudStrategy(target);                case Strategy.MinionExplode: return new MinionOneUseStrategy(target);                case Strategy.MinionFire: return new MinionFireStrategy(target);                case Strategy.MinionOneUse: return new MinionOneUseStrategy(target);                case Strategy.MinionRotate: return new MinionRotateStrategy(target);                             case Strategy.Mutiny: return new AttackStrategy(target, AigilasActorType.NONPLAYER);                case Strategy.Null: return new NullStrategy(target);                case Strategy.StraightLineRotate: return new StraightLineRotateStrategy(target);                case Strategy.StraightLine: return new StraightLineStrategy(target);                case Strategy.TestBot: return new TestBotStrategy(target);                                default: throw new Exception("An undefined strategy was passed into the strategy factory: " + strategy);            }        }    }