package com.aigilas.strategies.impl;import com.aigilas.creatures.ICreature;import com.aigilas.skills.AnimationType;import com.aigilas.skills.SkillFactory;import com.aigilas.strategies.IStrategy;import com.aigilas.strategies.Strategy;import com.spx.core.RNG;import com.spx.entities.ActorType;import com.spx.entities.EntityManager;import com.spx.entities.EntityType;import com.spx.entities.HitTest;import com.spx.entities.IEntity;import com.spx.paths.PathFinder;    public class TestBotStrategy  extends  IStrategy    {        public TestBotStrategy(ICreature parent){ super(parent,Strategy.TestBot);            _targets.AddTargetTypes(ActorType.NONPLAYER);        }        private IEntity _stairsTarget;@Override        public  void Act()        {            if (RNG.Next(0, 1000) == 2)            {                _parent.CycleActiveSkill(1);            }            if (RNG.Next(0, 100) <= 1)            {                _parent.UseActiveSkill();            }            if (AbleToMove())            {                if (SkillFactory.IsSkill(_parent.GetActiveSkillName(), AnimationType.RANGED))                {                    if (opponent != null)                    {                        _parent.SetSkillVector(CalculateTargetVector(_parent.GetLocation(), opponent.GetLocation()));                    }                    if (_parent.GetSkillVector().GridX != 0 || _parent.GetSkillVector().GridY != 0)                    {                        _parent.UseActiveSkill();                    }                }                if (targetPath.HasMoves())                {                    nextMove.Copy(targetPath.GetNextMove());                    _parent.MoveTo(nextMove);                    if (_stairsTarget != null && HitTest.IsTouching(_parent, _stairsTarget))                    {                        _parent.SetInteracting(true);                    }                    else                    {                        _parent.SetInteracting(false);                    }                }            }            else            {                if ((targetPath == null || !targetPath.HasMoves()) && EntityManager.GetObjects(EntityType.ACTOR).size() == 1)                {                    _stairsTarget = EntityManager.GetObject(com.aigilas.EntityType.DOWNSTAIRS);                    if (_stairsTarget != null)                    {                        targetPath.Copy(PathFinder.FindNextMove(_parent.GetLocation(), _stairsTarget.GetLocation()));                    }                }            }        }    }